#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _4___EcrivainsDeconnecteCode
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Gestion_Entreprise")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertadminstrateur(adminstrateur instance);
    partial void Updateadminstrateur(adminstrateur instance);
    partial void Deleteadminstrateur(adminstrateur instance);
    partial void InsertBonLivraison(BonLivraison instance);
    partial void UpdateBonLivraison(BonLivraison instance);
    partial void DeleteBonLivraison(BonLivraison instance);
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    partial void InsertCommande(Commande instance);
    partial void UpdateCommande(Commande instance);
    partial void DeleteCommande(Commande instance);
    partial void InsertDepot(Depot instance);
    partial void UpdateDepot(Depot instance);
    partial void DeleteDepot(Depot instance);
    partial void InsertEmploye(Employe instance);
    partial void UpdateEmploye(Employe instance);
    partial void DeleteEmploye(Employe instance);
    partial void InsertLignCommandeEmploye(LignCommandeEmploye instance);
    partial void UpdateLignCommandeEmploye(LignCommandeEmploye instance);
    partial void DeleteLignCommandeEmploye(LignCommandeEmploye instance);
    partial void InsertLigneCommandAdmin(LigneCommandAdmin instance);
    partial void UpdateLigneCommandAdmin(LigneCommandAdmin instance);
    partial void DeleteLigneCommandAdmin(LigneCommandAdmin instance);
    partial void InsertLivreur(Livreur instance);
    partial void UpdateLivreur(Livreur instance);
    partial void DeleteLivreur(Livreur instance);
    partial void InsertLigneCommandAdmin1(LigneCommandAdmin1 instance);
    partial void UpdateLigneCommandAdmin1(LigneCommandAdmin1 instance);
    partial void DeleteLigneCommandAdmin1(LigneCommandAdmin1 instance);
    partial void Insertlogpass(logpass instance);
    partial void Updatelogpass(logpass instance);
    partial void Deletelogpass(logpass instance);
    partial void Insertlogpassadmin(logpassadmin instance);
    partial void Updatelogpassadmin(logpassadmin instance);
    partial void Deletelogpassadmin(logpassadmin instance);
    partial void InsertProduit(Produit instance);
    partial void UpdateProduit(Produit instance);
    partial void DeleteProduit(Produit instance);
    partial void InsertSocietéLivraison(SocietéLivraison instance);
    partial void UpdateSocietéLivraison(SocietéLivraison instance);
    partial void DeleteSocietéLivraison(SocietéLivraison instance);
    partial void InsertTransport(Transport instance);
    partial void UpdateTransport(Transport instance);
    partial void DeleteTransport(Transport instance);
    partial void InsertVille(Ville instance);
    partial void UpdateVille(Ville instance);
    partial void DeleteVille(Ville instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::_4___EcrivainsDeconnecteCode.Properties.Settings.Default.Gestion_EntrepriseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<adminstrateur> adminstrateurs
		{
			get
			{
				return this.GetTable<adminstrateur>();
			}
		}
		
		public System.Data.Linq.Table<BonLivraison> BonLivraisons
		{
			get
			{
				return this.GetTable<BonLivraison>();
			}
		}
		
		public System.Data.Linq.Table<Client> Clients
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<Commande> Commandes
		{
			get
			{
				return this.GetTable<Commande>();
			}
		}
		
		public System.Data.Linq.Table<Depot> Depots
		{
			get
			{
				return this.GetTable<Depot>();
			}
		}
		
		public System.Data.Linq.Table<Employe> Employes
		{
			get
			{
				return this.GetTable<Employe>();
			}
		}
		
		public System.Data.Linq.Table<LignCommandeEmploye> LignCommandeEmployes
		{
			get
			{
				return this.GetTable<LignCommandeEmploye>();
			}
		}
		
		public System.Data.Linq.Table<LigneCommandAdmin> LigneCommandAdmins
		{
			get
			{
				return this.GetTable<LigneCommandAdmin>();
			}
		}
		
		public System.Data.Linq.Table<Livreur> Livreurs
		{
			get
			{
				return this.GetTable<Livreur>();
			}
		}
		
		public System.Data.Linq.Table<LigneCommandAdmin1> LigneCommandAdmin1s
		{
			get
			{
				return this.GetTable<LigneCommandAdmin1>();
			}
		}
		
		public System.Data.Linq.Table<logpass> logpasses
		{
			get
			{
				return this.GetTable<logpass>();
			}
		}
		
		public System.Data.Linq.Table<logpassadmin> logpassadmins
		{
			get
			{
				return this.GetTable<logpassadmin>();
			}
		}
		
		public System.Data.Linq.Table<Produit> Produits
		{
			get
			{
				return this.GetTable<Produit>();
			}
		}
		
		public System.Data.Linq.Table<SocietéLivraison> SocietéLivraisons
		{
			get
			{
				return this.GetTable<SocietéLivraison>();
			}
		}
		
		public System.Data.Linq.Table<Transport> Transports
		{
			get
			{
				return this.GetTable<Transport>();
			}
		}
		
		public System.Data.Linq.Table<Ville> Villes
		{
			get
			{
				return this.GetTable<Ville>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.adminstrateur")]
	public partial class adminstrateur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idadmin;
		
		private string _nomAdmin;
		
		private string _prenomAdmin;
		
		private System.Nullable<int> _idlogpassAdmin;
		
		private EntitySet<LigneCommandAdmin> _LigneCommandAdmins;
		
		private EntitySet<LigneCommandAdmin1> _LigneCommandAdmin1s;
		
		private EntityRef<logpassadmin> _logpassadmin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidadminChanging(int value);
    partial void OnidadminChanged();
    partial void OnnomAdminChanging(string value);
    partial void OnnomAdminChanged();
    partial void OnprenomAdminChanging(string value);
    partial void OnprenomAdminChanged();
    partial void OnidlogpassAdminChanging(System.Nullable<int> value);
    partial void OnidlogpassAdminChanged();
    #endregion
		
		public adminstrateur()
		{
			this._LigneCommandAdmins = new EntitySet<LigneCommandAdmin>(new Action<LigneCommandAdmin>(this.attach_LigneCommandAdmins), new Action<LigneCommandAdmin>(this.detach_LigneCommandAdmins));
			this._LigneCommandAdmin1s = new EntitySet<LigneCommandAdmin1>(new Action<LigneCommandAdmin1>(this.attach_LigneCommandAdmin1s), new Action<LigneCommandAdmin1>(this.detach_LigneCommandAdmin1s));
			this._logpassadmin = default(EntityRef<logpassadmin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idadmin", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idadmin
		{
			get
			{
				return this._idadmin;
			}
			set
			{
				if ((this._idadmin != value))
				{
					this.OnidadminChanging(value);
					this.SendPropertyChanging();
					this._idadmin = value;
					this.SendPropertyChanged("idadmin");
					this.OnidadminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomAdmin", DbType="VarChar(50)")]
		public string nomAdmin
		{
			get
			{
				return this._nomAdmin;
			}
			set
			{
				if ((this._nomAdmin != value))
				{
					this.OnnomAdminChanging(value);
					this.SendPropertyChanging();
					this._nomAdmin = value;
					this.SendPropertyChanged("nomAdmin");
					this.OnnomAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenomAdmin", DbType="VarChar(50)")]
		public string prenomAdmin
		{
			get
			{
				return this._prenomAdmin;
			}
			set
			{
				if ((this._prenomAdmin != value))
				{
					this.OnprenomAdminChanging(value);
					this.SendPropertyChanging();
					this._prenomAdmin = value;
					this.SendPropertyChanged("prenomAdmin");
					this.OnprenomAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idlogpassAdmin", DbType="Int")]
		public System.Nullable<int> idlogpassAdmin
		{
			get
			{
				return this._idlogpassAdmin;
			}
			set
			{
				if ((this._idlogpassAdmin != value))
				{
					if (this._logpassadmin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidlogpassAdminChanging(value);
					this.SendPropertyChanging();
					this._idlogpassAdmin = value;
					this.SendPropertyChanged("idlogpassAdmin");
					this.OnidlogpassAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="adminstrateur_LigneCommandAdmin", Storage="_LigneCommandAdmins", ThisKey="idadmin", OtherKey="idadmin")]
		public EntitySet<LigneCommandAdmin> LigneCommandAdmins
		{
			get
			{
				return this._LigneCommandAdmins;
			}
			set
			{
				this._LigneCommandAdmins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="adminstrateur_LigneCommandAdmin1", Storage="_LigneCommandAdmin1s", ThisKey="idadmin", OtherKey="idadmin")]
		public EntitySet<LigneCommandAdmin1> LigneCommandAdmin1s
		{
			get
			{
				return this._LigneCommandAdmin1s;
			}
			set
			{
				this._LigneCommandAdmin1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="logpassadmin_adminstrateur", Storage="_logpassadmin", ThisKey="idlogpassAdmin", OtherKey="idlogpassAdmin", IsForeignKey=true)]
		public logpassadmin logpassadmin
		{
			get
			{
				return this._logpassadmin.Entity;
			}
			set
			{
				logpassadmin previousValue = this._logpassadmin.Entity;
				if (((previousValue != value) 
							|| (this._logpassadmin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._logpassadmin.Entity = null;
						previousValue.adminstrateurs.Remove(this);
					}
					this._logpassadmin.Entity = value;
					if ((value != null))
					{
						value.adminstrateurs.Add(this);
						this._idlogpassAdmin = value.idlogpassAdmin;
					}
					else
					{
						this._idlogpassAdmin = default(Nullable<int>);
					}
					this.SendPropertyChanged("logpassadmin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LigneCommandAdmins(LigneCommandAdmin entity)
		{
			this.SendPropertyChanging();
			entity.adminstrateur = this;
		}
		
		private void detach_LigneCommandAdmins(LigneCommandAdmin entity)
		{
			this.SendPropertyChanging();
			entity.adminstrateur = null;
		}
		
		private void attach_LigneCommandAdmin1s(LigneCommandAdmin1 entity)
		{
			this.SendPropertyChanging();
			entity.adminstrateur = this;
		}
		
		private void detach_LigneCommandAdmin1s(LigneCommandAdmin1 entity)
		{
			this.SendPropertyChanging();
			entity.adminstrateur = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BonLivraison")]
	public partial class BonLivraison : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_bon_livraison;
		
		private System.Nullable<System.DateTime> _Date_bon_livraison;
		
		private string _Nom_bon_livraison;
		
		private System.Nullable<int> _Nombre_colis;
		
		private System.Nullable<int> _idCommande;
		
		private EntityRef<Commande> _Commande;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_bon_livraisonChanging(int value);
    partial void Onid_bon_livraisonChanged();
    partial void OnDate_bon_livraisonChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_bon_livraisonChanged();
    partial void OnNom_bon_livraisonChanging(string value);
    partial void OnNom_bon_livraisonChanged();
    partial void OnNombre_colisChanging(System.Nullable<int> value);
    partial void OnNombre_colisChanged();
    partial void OnidCommandeChanging(System.Nullable<int> value);
    partial void OnidCommandeChanged();
    #endregion
		
		public BonLivraison()
		{
			this._Commande = default(EntityRef<Commande>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_bon_livraison", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_bon_livraison
		{
			get
			{
				return this._id_bon_livraison;
			}
			set
			{
				if ((this._id_bon_livraison != value))
				{
					this.Onid_bon_livraisonChanging(value);
					this.SendPropertyChanging();
					this._id_bon_livraison = value;
					this.SendPropertyChanged("id_bon_livraison");
					this.Onid_bon_livraisonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_bon_livraison", DbType="Date")]
		public System.Nullable<System.DateTime> Date_bon_livraison
		{
			get
			{
				return this._Date_bon_livraison;
			}
			set
			{
				if ((this._Date_bon_livraison != value))
				{
					this.OnDate_bon_livraisonChanging(value);
					this.SendPropertyChanging();
					this._Date_bon_livraison = value;
					this.SendPropertyChanged("Date_bon_livraison");
					this.OnDate_bon_livraisonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom_bon_livraison", DbType="VarChar(50)")]
		public string Nom_bon_livraison
		{
			get
			{
				return this._Nom_bon_livraison;
			}
			set
			{
				if ((this._Nom_bon_livraison != value))
				{
					this.OnNom_bon_livraisonChanging(value);
					this.SendPropertyChanging();
					this._Nom_bon_livraison = value;
					this.SendPropertyChanged("Nom_bon_livraison");
					this.OnNom_bon_livraisonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre_colis", DbType="Int")]
		public System.Nullable<int> Nombre_colis
		{
			get
			{
				return this._Nombre_colis;
			}
			set
			{
				if ((this._Nombre_colis != value))
				{
					this.OnNombre_colisChanging(value);
					this.SendPropertyChanging();
					this._Nombre_colis = value;
					this.SendPropertyChanged("Nombre_colis");
					this.OnNombre_colisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCommande", DbType="Int")]
		public System.Nullable<int> idCommande
		{
			get
			{
				return this._idCommande;
			}
			set
			{
				if ((this._idCommande != value))
				{
					if (this._Commande.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCommandeChanging(value);
					this.SendPropertyChanging();
					this._idCommande = value;
					this.SendPropertyChanged("idCommande");
					this.OnidCommandeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commande_BonLivraison", Storage="_Commande", ThisKey="idCommande", OtherKey="idCommande", IsForeignKey=true)]
		public Commande Commande
		{
			get
			{
				return this._Commande.Entity;
			}
			set
			{
				Commande previousValue = this._Commande.Entity;
				if (((previousValue != value) 
							|| (this._Commande.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Commande.Entity = null;
						previousValue.BonLivraisons.Remove(this);
					}
					this._Commande.Entity = value;
					if ((value != null))
					{
						value.BonLivraisons.Add(this);
						this._idCommande = value.idCommande;
					}
					else
					{
						this._idCommande = default(Nullable<int>);
					}
					this.SendPropertyChanged("Commande");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Client")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idClient;
		
		private string _NomComplet;
		
		private string _AdresseClient;
		
		private string _TelephoneClient;
		
		private System.Nullable<int> _idville;
		
		private EntitySet<Commande> _Commandes;
		
		private EntityRef<Ville> _Ville;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidClientChanging(int value);
    partial void OnidClientChanged();
    partial void OnNomCompletChanging(string value);
    partial void OnNomCompletChanged();
    partial void OnAdresseClientChanging(string value);
    partial void OnAdresseClientChanged();
    partial void OnTelephoneClientChanging(string value);
    partial void OnTelephoneClientChanged();
    partial void OnidvilleChanging(System.Nullable<int> value);
    partial void OnidvilleChanged();
    #endregion
		
		public Client()
		{
			this._Commandes = new EntitySet<Commande>(new Action<Commande>(this.attach_Commandes), new Action<Commande>(this.detach_Commandes));
			this._Ville = default(EntityRef<Ville>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idClient", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idClient
		{
			get
			{
				return this._idClient;
			}
			set
			{
				if ((this._idClient != value))
				{
					this.OnidClientChanging(value);
					this.SendPropertyChanging();
					this._idClient = value;
					this.SendPropertyChanged("idClient");
					this.OnidClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomComplet", DbType="VarChar(50)")]
		public string NomComplet
		{
			get
			{
				return this._NomComplet;
			}
			set
			{
				if ((this._NomComplet != value))
				{
					this.OnNomCompletChanging(value);
					this.SendPropertyChanging();
					this._NomComplet = value;
					this.SendPropertyChanged("NomComplet");
					this.OnNomCompletChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdresseClient", DbType="VarChar(50)")]
		public string AdresseClient
		{
			get
			{
				return this._AdresseClient;
			}
			set
			{
				if ((this._AdresseClient != value))
				{
					this.OnAdresseClientChanging(value);
					this.SendPropertyChanging();
					this._AdresseClient = value;
					this.SendPropertyChanged("AdresseClient");
					this.OnAdresseClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneClient", DbType="VarChar(50)")]
		public string TelephoneClient
		{
			get
			{
				return this._TelephoneClient;
			}
			set
			{
				if ((this._TelephoneClient != value))
				{
					this.OnTelephoneClientChanging(value);
					this.SendPropertyChanging();
					this._TelephoneClient = value;
					this.SendPropertyChanged("TelephoneClient");
					this.OnTelephoneClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idville", DbType="Int")]
		public System.Nullable<int> idville
		{
			get
			{
				return this._idville;
			}
			set
			{
				if ((this._idville != value))
				{
					if (this._Ville.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidvilleChanging(value);
					this.SendPropertyChanging();
					this._idville = value;
					this.SendPropertyChanged("idville");
					this.OnidvilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Commande", Storage="_Commandes", ThisKey="idClient", OtherKey="idClient")]
		public EntitySet<Commande> Commandes
		{
			get
			{
				return this._Commandes;
			}
			set
			{
				this._Commandes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ville_Client", Storage="_Ville", ThisKey="idville", OtherKey="idVille", IsForeignKey=true)]
		public Ville Ville
		{
			get
			{
				return this._Ville.Entity;
			}
			set
			{
				Ville previousValue = this._Ville.Entity;
				if (((previousValue != value) 
							|| (this._Ville.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ville.Entity = null;
						previousValue.Clients.Remove(this);
					}
					this._Ville.Entity = value;
					if ((value != null))
					{
						value.Clients.Add(this);
						this._idville = value.idVille;
					}
					else
					{
						this._idville = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ville");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Commandes(Commande entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_Commandes(Commande entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Commande")]
	public partial class Commande : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCommande;
		
		private System.Nullable<System.DateTime> _DateCommande;
		
		private string _StatutCommande;
		
		private string _Commentaire;
		
		private System.Nullable<int> _idClient;
		
		private System.Nullable<int> _idVille;
		
		private System.Nullable<int> _idProduit;
		
		private System.Nullable<int> _idTransport;
		
		private string _Adresse;
		
		private EntitySet<BonLivraison> _BonLivraisons;
		
		private EntitySet<LignCommandeEmploye> _LignCommandeEmployes;
		
		private EntitySet<LigneCommandAdmin> _LigneCommandAdmins;
		
		private EntitySet<LigneCommandAdmin1> _LigneCommandAdmin1s;
		
		private EntityRef<Client> _Client;
		
		private EntityRef<Produit> _Produit;
		
		private EntityRef<Transport> _Transport;
		
		private EntityRef<Ville> _Ville;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCommandeChanging(int value);
    partial void OnidCommandeChanged();
    partial void OnDateCommandeChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCommandeChanged();
    partial void OnStatutCommandeChanging(string value);
    partial void OnStatutCommandeChanged();
    partial void OnCommentaireChanging(string value);
    partial void OnCommentaireChanged();
    partial void OnidClientChanging(System.Nullable<int> value);
    partial void OnidClientChanged();
    partial void OnidVilleChanging(System.Nullable<int> value);
    partial void OnidVilleChanged();
    partial void OnidProduitChanging(System.Nullable<int> value);
    partial void OnidProduitChanged();
    partial void OnidTransportChanging(System.Nullable<int> value);
    partial void OnidTransportChanged();
    partial void OnAdresseChanging(string value);
    partial void OnAdresseChanged();
    #endregion
		
		public Commande()
		{
			this._BonLivraisons = new EntitySet<BonLivraison>(new Action<BonLivraison>(this.attach_BonLivraisons), new Action<BonLivraison>(this.detach_BonLivraisons));
			this._LignCommandeEmployes = new EntitySet<LignCommandeEmploye>(new Action<LignCommandeEmploye>(this.attach_LignCommandeEmployes), new Action<LignCommandeEmploye>(this.detach_LignCommandeEmployes));
			this._LigneCommandAdmins = new EntitySet<LigneCommandAdmin>(new Action<LigneCommandAdmin>(this.attach_LigneCommandAdmins), new Action<LigneCommandAdmin>(this.detach_LigneCommandAdmins));
			this._LigneCommandAdmin1s = new EntitySet<LigneCommandAdmin1>(new Action<LigneCommandAdmin1>(this.attach_LigneCommandAdmin1s), new Action<LigneCommandAdmin1>(this.detach_LigneCommandAdmin1s));
			this._Client = default(EntityRef<Client>);
			this._Produit = default(EntityRef<Produit>);
			this._Transport = default(EntityRef<Transport>);
			this._Ville = default(EntityRef<Ville>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCommande", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCommande
		{
			get
			{
				return this._idCommande;
			}
			set
			{
				if ((this._idCommande != value))
				{
					this.OnidCommandeChanging(value);
					this.SendPropertyChanging();
					this._idCommande = value;
					this.SendPropertyChanged("idCommande");
					this.OnidCommandeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCommande", DbType="Date")]
		public System.Nullable<System.DateTime> DateCommande
		{
			get
			{
				return this._DateCommande;
			}
			set
			{
				if ((this._DateCommande != value))
				{
					this.OnDateCommandeChanging(value);
					this.SendPropertyChanging();
					this._DateCommande = value;
					this.SendPropertyChanged("DateCommande");
					this.OnDateCommandeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutCommande", DbType="VarChar(50)")]
		public string StatutCommande
		{
			get
			{
				return this._StatutCommande;
			}
			set
			{
				if ((this._StatutCommande != value))
				{
					this.OnStatutCommandeChanging(value);
					this.SendPropertyChanging();
					this._StatutCommande = value;
					this.SendPropertyChanged("StatutCommande");
					this.OnStatutCommandeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commentaire", DbType="VarChar(200)")]
		public string Commentaire
		{
			get
			{
				return this._Commentaire;
			}
			set
			{
				if ((this._Commentaire != value))
				{
					this.OnCommentaireChanging(value);
					this.SendPropertyChanging();
					this._Commentaire = value;
					this.SendPropertyChanged("Commentaire");
					this.OnCommentaireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idClient", DbType="Int")]
		public System.Nullable<int> idClient
		{
			get
			{
				return this._idClient;
			}
			set
			{
				if ((this._idClient != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidClientChanging(value);
					this.SendPropertyChanging();
					this._idClient = value;
					this.SendPropertyChanged("idClient");
					this.OnidClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idVille", DbType="Int")]
		public System.Nullable<int> idVille
		{
			get
			{
				return this._idVille;
			}
			set
			{
				if ((this._idVille != value))
				{
					if (this._Ville.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidVilleChanging(value);
					this.SendPropertyChanging();
					this._idVille = value;
					this.SendPropertyChanged("idVille");
					this.OnidVilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProduit", DbType="Int")]
		public System.Nullable<int> idProduit
		{
			get
			{
				return this._idProduit;
			}
			set
			{
				if ((this._idProduit != value))
				{
					if (this._Produit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProduitChanging(value);
					this.SendPropertyChanging();
					this._idProduit = value;
					this.SendPropertyChanged("idProduit");
					this.OnidProduitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTransport", DbType="Int")]
		public System.Nullable<int> idTransport
		{
			get
			{
				return this._idTransport;
			}
			set
			{
				if ((this._idTransport != value))
				{
					if (this._Transport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTransportChanging(value);
					this.SendPropertyChanging();
					this._idTransport = value;
					this.SendPropertyChanged("idTransport");
					this.OnidTransportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresse", DbType="VarChar(150)")]
		public string Adresse
		{
			get
			{
				return this._Adresse;
			}
			set
			{
				if ((this._Adresse != value))
				{
					this.OnAdresseChanging(value);
					this.SendPropertyChanging();
					this._Adresse = value;
					this.SendPropertyChanged("Adresse");
					this.OnAdresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commande_BonLivraison", Storage="_BonLivraisons", ThisKey="idCommande", OtherKey="idCommande")]
		public EntitySet<BonLivraison> BonLivraisons
		{
			get
			{
				return this._BonLivraisons;
			}
			set
			{
				this._BonLivraisons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commande_LignCommandeEmploye", Storage="_LignCommandeEmployes", ThisKey="idCommande", OtherKey="idCommande")]
		public EntitySet<LignCommandeEmploye> LignCommandeEmployes
		{
			get
			{
				return this._LignCommandeEmployes;
			}
			set
			{
				this._LignCommandeEmployes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commande_LigneCommandAdmin", Storage="_LigneCommandAdmins", ThisKey="idCommande", OtherKey="idCommande")]
		public EntitySet<LigneCommandAdmin> LigneCommandAdmins
		{
			get
			{
				return this._LigneCommandAdmins;
			}
			set
			{
				this._LigneCommandAdmins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commande_LigneCommandAdmin1", Storage="_LigneCommandAdmin1s", ThisKey="idCommande", OtherKey="idCommande")]
		public EntitySet<LigneCommandAdmin1> LigneCommandAdmin1s
		{
			get
			{
				return this._LigneCommandAdmin1s;
			}
			set
			{
				this._LigneCommandAdmin1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Commande", Storage="_Client", ThisKey="idClient", OtherKey="idClient", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.Commandes.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.Commandes.Add(this);
						this._idClient = value.idClient;
					}
					else
					{
						this._idClient = default(Nullable<int>);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produit_Commande", Storage="_Produit", ThisKey="idProduit", OtherKey="idProduit", IsForeignKey=true)]
		public Produit Produit
		{
			get
			{
				return this._Produit.Entity;
			}
			set
			{
				Produit previousValue = this._Produit.Entity;
				if (((previousValue != value) 
							|| (this._Produit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produit.Entity = null;
						previousValue.Commandes.Remove(this);
					}
					this._Produit.Entity = value;
					if ((value != null))
					{
						value.Commandes.Add(this);
						this._idProduit = value.idProduit;
					}
					else
					{
						this._idProduit = default(Nullable<int>);
					}
					this.SendPropertyChanged("Produit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transport_Commande", Storage="_Transport", ThisKey="idTransport", OtherKey="idTransport", IsForeignKey=true)]
		public Transport Transport
		{
			get
			{
				return this._Transport.Entity;
			}
			set
			{
				Transport previousValue = this._Transport.Entity;
				if (((previousValue != value) 
							|| (this._Transport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Transport.Entity = null;
						previousValue.Commandes.Remove(this);
					}
					this._Transport.Entity = value;
					if ((value != null))
					{
						value.Commandes.Add(this);
						this._idTransport = value.idTransport;
					}
					else
					{
						this._idTransport = default(Nullable<int>);
					}
					this.SendPropertyChanged("Transport");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ville_Commande", Storage="_Ville", ThisKey="idVille", OtherKey="idVille", IsForeignKey=true)]
		public Ville Ville
		{
			get
			{
				return this._Ville.Entity;
			}
			set
			{
				Ville previousValue = this._Ville.Entity;
				if (((previousValue != value) 
							|| (this._Ville.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ville.Entity = null;
						previousValue.Commandes.Remove(this);
					}
					this._Ville.Entity = value;
					if ((value != null))
					{
						value.Commandes.Add(this);
						this._idVille = value.idVille;
					}
					else
					{
						this._idVille = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ville");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BonLivraisons(BonLivraison entity)
		{
			this.SendPropertyChanging();
			entity.Commande = this;
		}
		
		private void detach_BonLivraisons(BonLivraison entity)
		{
			this.SendPropertyChanging();
			entity.Commande = null;
		}
		
		private void attach_LignCommandeEmployes(LignCommandeEmploye entity)
		{
			this.SendPropertyChanging();
			entity.Commande = this;
		}
		
		private void detach_LignCommandeEmployes(LignCommandeEmploye entity)
		{
			this.SendPropertyChanging();
			entity.Commande = null;
		}
		
		private void attach_LigneCommandAdmins(LigneCommandAdmin entity)
		{
			this.SendPropertyChanging();
			entity.Commande = this;
		}
		
		private void detach_LigneCommandAdmins(LigneCommandAdmin entity)
		{
			this.SendPropertyChanging();
			entity.Commande = null;
		}
		
		private void attach_LigneCommandAdmin1s(LigneCommandAdmin1 entity)
		{
			this.SendPropertyChanging();
			entity.Commande = this;
		}
		
		private void detach_LigneCommandAdmin1s(LigneCommandAdmin1 entity)
		{
			this.SendPropertyChanging();
			entity.Commande = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Depot")]
	public partial class Depot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDep;
		
		private System.Nullable<int> _idLivreur;
		
		private System.Nullable<int> _idProduit;
		
		private EntityRef<Livreur> _Livreur;
		
		private EntityRef<Produit> _Produit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDepChanging(int value);
    partial void OnidDepChanged();
    partial void OnidLivreurChanging(System.Nullable<int> value);
    partial void OnidLivreurChanged();
    partial void OnidProduitChanging(System.Nullable<int> value);
    partial void OnidProduitChanged();
    #endregion
		
		public Depot()
		{
			this._Livreur = default(EntityRef<Livreur>);
			this._Produit = default(EntityRef<Produit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDep", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDep
		{
			get
			{
				return this._idDep;
			}
			set
			{
				if ((this._idDep != value))
				{
					this.OnidDepChanging(value);
					this.SendPropertyChanging();
					this._idDep = value;
					this.SendPropertyChanged("idDep");
					this.OnidDepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLivreur", DbType="Int")]
		public System.Nullable<int> idLivreur
		{
			get
			{
				return this._idLivreur;
			}
			set
			{
				if ((this._idLivreur != value))
				{
					if (this._Livreur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidLivreurChanging(value);
					this.SendPropertyChanging();
					this._idLivreur = value;
					this.SendPropertyChanged("idLivreur");
					this.OnidLivreurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProduit", DbType="Int")]
		public System.Nullable<int> idProduit
		{
			get
			{
				return this._idProduit;
			}
			set
			{
				if ((this._idProduit != value))
				{
					if (this._Produit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProduitChanging(value);
					this.SendPropertyChanging();
					this._idProduit = value;
					this.SendPropertyChanged("idProduit");
					this.OnidProduitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Livreur_Depot", Storage="_Livreur", ThisKey="idLivreur", OtherKey="idLivreur", IsForeignKey=true)]
		public Livreur Livreur
		{
			get
			{
				return this._Livreur.Entity;
			}
			set
			{
				Livreur previousValue = this._Livreur.Entity;
				if (((previousValue != value) 
							|| (this._Livreur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Livreur.Entity = null;
						previousValue.Depots.Remove(this);
					}
					this._Livreur.Entity = value;
					if ((value != null))
					{
						value.Depots.Add(this);
						this._idLivreur = value.idLivreur;
					}
					else
					{
						this._idLivreur = default(Nullable<int>);
					}
					this.SendPropertyChanged("Livreur");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produit_Depot", Storage="_Produit", ThisKey="idProduit", OtherKey="idProduit", IsForeignKey=true)]
		public Produit Produit
		{
			get
			{
				return this._Produit.Entity;
			}
			set
			{
				Produit previousValue = this._Produit.Entity;
				if (((previousValue != value) 
							|| (this._Produit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produit.Entity = null;
						previousValue.Depots.Remove(this);
					}
					this._Produit.Entity = value;
					if ((value != null))
					{
						value.Depots.Add(this);
						this._idProduit = value.idProduit;
					}
					else
					{
						this._idProduit = default(Nullable<int>);
					}
					this.SendPropertyChanged("Produit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employe")]
	public partial class Employe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEmploye;
		
		private string _NomEmploye;
		
		private string _PrenomEmploye;
		
		private string _Adresse;
		
		private string _telephone;
		
		private string _photo;
		
		private System.Nullable<decimal> _Salaire;
		
		private System.Nullable<System.DateTime> _dateNaissance;
		
		private System.Nullable<System.DateTime> _dateRecretement;
		
		private string _ville;
		
		private System.Nullable<int> _idlogpass;
		
		private string _hint;
		
		private EntitySet<LignCommandeEmploye> _LignCommandeEmployes;
		
		private EntityRef<logpass> _logpass;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEmployeChanging(int value);
    partial void OnidEmployeChanged();
    partial void OnNomEmployeChanging(string value);
    partial void OnNomEmployeChanged();
    partial void OnPrenomEmployeChanging(string value);
    partial void OnPrenomEmployeChanged();
    partial void OnAdresseChanging(string value);
    partial void OnAdresseChanged();
    partial void OntelephoneChanging(string value);
    partial void OntelephoneChanged();
    partial void OnphotoChanging(string value);
    partial void OnphotoChanged();
    partial void OnSalaireChanging(System.Nullable<decimal> value);
    partial void OnSalaireChanged();
    partial void OndateNaissanceChanging(System.Nullable<System.DateTime> value);
    partial void OndateNaissanceChanged();
    partial void OndateRecretementChanging(System.Nullable<System.DateTime> value);
    partial void OndateRecretementChanged();
    partial void OnvilleChanging(string value);
    partial void OnvilleChanged();
    partial void OnidlogpassChanging(System.Nullable<int> value);
    partial void OnidlogpassChanged();
    partial void OnhintChanging(string value);
    partial void OnhintChanged();
    #endregion
		
		public Employe()
		{
			this._LignCommandeEmployes = new EntitySet<LignCommandeEmploye>(new Action<LignCommandeEmploye>(this.attach_LignCommandeEmployes), new Action<LignCommandeEmploye>(this.detach_LignCommandeEmployes));
			this._logpass = default(EntityRef<logpass>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmploye", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idEmploye
		{
			get
			{
				return this._idEmploye;
			}
			set
			{
				if ((this._idEmploye != value))
				{
					this.OnidEmployeChanging(value);
					this.SendPropertyChanging();
					this._idEmploye = value;
					this.SendPropertyChanged("idEmploye");
					this.OnidEmployeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomEmploye", DbType="VarChar(50)")]
		public string NomEmploye
		{
			get
			{
				return this._NomEmploye;
			}
			set
			{
				if ((this._NomEmploye != value))
				{
					this.OnNomEmployeChanging(value);
					this.SendPropertyChanging();
					this._NomEmploye = value;
					this.SendPropertyChanged("NomEmploye");
					this.OnNomEmployeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrenomEmploye", DbType="VarChar(50)")]
		public string PrenomEmploye
		{
			get
			{
				return this._PrenomEmploye;
			}
			set
			{
				if ((this._PrenomEmploye != value))
				{
					this.OnPrenomEmployeChanging(value);
					this.SendPropertyChanging();
					this._PrenomEmploye = value;
					this.SendPropertyChanged("PrenomEmploye");
					this.OnPrenomEmployeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresse", DbType="VarChar(50)")]
		public string Adresse
		{
			get
			{
				return this._Adresse;
			}
			set
			{
				if ((this._Adresse != value))
				{
					this.OnAdresseChanging(value);
					this.SendPropertyChanging();
					this._Adresse = value;
					this.SendPropertyChanged("Adresse");
					this.OnAdresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="VarChar(50)")]
		public string telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this.OntelephoneChanging(value);
					this.SendPropertyChanging();
					this._telephone = value;
					this.SendPropertyChanged("telephone");
					this.OntelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photo", DbType="VarChar(50)")]
		public string photo
		{
			get
			{
				return this._photo;
			}
			set
			{
				if ((this._photo != value))
				{
					this.OnphotoChanging(value);
					this.SendPropertyChanging();
					this._photo = value;
					this.SendPropertyChanged("photo");
					this.OnphotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salaire", DbType="Money")]
		public System.Nullable<decimal> Salaire
		{
			get
			{
				return this._Salaire;
			}
			set
			{
				if ((this._Salaire != value))
				{
					this.OnSalaireChanging(value);
					this.SendPropertyChanging();
					this._Salaire = value;
					this.SendPropertyChanged("Salaire");
					this.OnSalaireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateNaissance", DbType="Date")]
		public System.Nullable<System.DateTime> dateNaissance
		{
			get
			{
				return this._dateNaissance;
			}
			set
			{
				if ((this._dateNaissance != value))
				{
					this.OndateNaissanceChanging(value);
					this.SendPropertyChanging();
					this._dateNaissance = value;
					this.SendPropertyChanged("dateNaissance");
					this.OndateNaissanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateRecretement", DbType="Date")]
		public System.Nullable<System.DateTime> dateRecretement
		{
			get
			{
				return this._dateRecretement;
			}
			set
			{
				if ((this._dateRecretement != value))
				{
					this.OndateRecretementChanging(value);
					this.SendPropertyChanging();
					this._dateRecretement = value;
					this.SendPropertyChanged("dateRecretement");
					this.OndateRecretementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ville", DbType="VarChar(50)")]
		public string ville
		{
			get
			{
				return this._ville;
			}
			set
			{
				if ((this._ville != value))
				{
					this.OnvilleChanging(value);
					this.SendPropertyChanging();
					this._ville = value;
					this.SendPropertyChanged("ville");
					this.OnvilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idlogpass", DbType="Int")]
		public System.Nullable<int> idlogpass
		{
			get
			{
				return this._idlogpass;
			}
			set
			{
				if ((this._idlogpass != value))
				{
					if (this._logpass.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidlogpassChanging(value);
					this.SendPropertyChanging();
					this._idlogpass = value;
					this.SendPropertyChanged("idlogpass");
					this.OnidlogpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hint", DbType="VarChar(50)")]
		public string hint
		{
			get
			{
				return this._hint;
			}
			set
			{
				if ((this._hint != value))
				{
					this.OnhintChanging(value);
					this.SendPropertyChanging();
					this._hint = value;
					this.SendPropertyChanged("hint");
					this.OnhintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employe_LignCommandeEmploye", Storage="_LignCommandeEmployes", ThisKey="idEmploye", OtherKey="idEmploye")]
		public EntitySet<LignCommandeEmploye> LignCommandeEmployes
		{
			get
			{
				return this._LignCommandeEmployes;
			}
			set
			{
				this._LignCommandeEmployes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="logpass_Employe", Storage="_logpass", ThisKey="idlogpass", OtherKey="idlogpass", IsForeignKey=true)]
		public logpass logpass
		{
			get
			{
				return this._logpass.Entity;
			}
			set
			{
				logpass previousValue = this._logpass.Entity;
				if (((previousValue != value) 
							|| (this._logpass.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._logpass.Entity = null;
						previousValue.Employes.Remove(this);
					}
					this._logpass.Entity = value;
					if ((value != null))
					{
						value.Employes.Add(this);
						this._idlogpass = value.idlogpass;
					}
					else
					{
						this._idlogpass = default(Nullable<int>);
					}
					this.SendPropertyChanged("logpass");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LignCommandeEmployes(LignCommandeEmploye entity)
		{
			this.SendPropertyChanging();
			entity.Employe = this;
		}
		
		private void detach_LignCommandeEmployes(LignCommandeEmploye entity)
		{
			this.SendPropertyChanging();
			entity.Employe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LignCommandeEmploye")]
	public partial class LignCommandeEmploye : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEmploye;
		
		private int _idCommande;
		
		private EntityRef<Commande> _Commande;
		
		private EntityRef<Employe> _Employe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEmployeChanging(int value);
    partial void OnidEmployeChanged();
    partial void OnidCommandeChanging(int value);
    partial void OnidCommandeChanged();
    #endregion
		
		public LignCommandeEmploye()
		{
			this._Commande = default(EntityRef<Commande>);
			this._Employe = default(EntityRef<Employe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmploye", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idEmploye
		{
			get
			{
				return this._idEmploye;
			}
			set
			{
				if ((this._idEmploye != value))
				{
					if (this._Employe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEmployeChanging(value);
					this.SendPropertyChanging();
					this._idEmploye = value;
					this.SendPropertyChanged("idEmploye");
					this.OnidEmployeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCommande", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idCommande
		{
			get
			{
				return this._idCommande;
			}
			set
			{
				if ((this._idCommande != value))
				{
					if (this._Commande.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCommandeChanging(value);
					this.SendPropertyChanging();
					this._idCommande = value;
					this.SendPropertyChanged("idCommande");
					this.OnidCommandeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commande_LignCommandeEmploye", Storage="_Commande", ThisKey="idCommande", OtherKey="idCommande", IsForeignKey=true)]
		public Commande Commande
		{
			get
			{
				return this._Commande.Entity;
			}
			set
			{
				Commande previousValue = this._Commande.Entity;
				if (((previousValue != value) 
							|| (this._Commande.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Commande.Entity = null;
						previousValue.LignCommandeEmployes.Remove(this);
					}
					this._Commande.Entity = value;
					if ((value != null))
					{
						value.LignCommandeEmployes.Add(this);
						this._idCommande = value.idCommande;
					}
					else
					{
						this._idCommande = default(int);
					}
					this.SendPropertyChanged("Commande");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employe_LignCommandeEmploye", Storage="_Employe", ThisKey="idEmploye", OtherKey="idEmploye", IsForeignKey=true)]
		public Employe Employe
		{
			get
			{
				return this._Employe.Entity;
			}
			set
			{
				Employe previousValue = this._Employe.Entity;
				if (((previousValue != value) 
							|| (this._Employe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employe.Entity = null;
						previousValue.LignCommandeEmployes.Remove(this);
					}
					this._Employe.Entity = value;
					if ((value != null))
					{
						value.LignCommandeEmployes.Add(this);
						this._idEmploye = value.idEmploye;
					}
					else
					{
						this._idEmploye = default(int);
					}
					this.SendPropertyChanged("Employe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LigneCommandAdmin")]
	public partial class LigneCommandAdmin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idadmin;
		
		private int _idCommande;
		
		private EntityRef<adminstrateur> _adminstrateur;
		
		private EntityRef<Commande> _Commande;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidadminChanging(int value);
    partial void OnidadminChanged();
    partial void OnidCommandeChanging(int value);
    partial void OnidCommandeChanged();
    #endregion
		
		public LigneCommandAdmin()
		{
			this._adminstrateur = default(EntityRef<adminstrateur>);
			this._Commande = default(EntityRef<Commande>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idadmin", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idadmin
		{
			get
			{
				return this._idadmin;
			}
			set
			{
				if ((this._idadmin != value))
				{
					if (this._adminstrateur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidadminChanging(value);
					this.SendPropertyChanging();
					this._idadmin = value;
					this.SendPropertyChanged("idadmin");
					this.OnidadminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCommande", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idCommande
		{
			get
			{
				return this._idCommande;
			}
			set
			{
				if ((this._idCommande != value))
				{
					if (this._Commande.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCommandeChanging(value);
					this.SendPropertyChanging();
					this._idCommande = value;
					this.SendPropertyChanged("idCommande");
					this.OnidCommandeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="adminstrateur_LigneCommandAdmin", Storage="_adminstrateur", ThisKey="idadmin", OtherKey="idadmin", IsForeignKey=true)]
		public adminstrateur adminstrateur
		{
			get
			{
				return this._adminstrateur.Entity;
			}
			set
			{
				adminstrateur previousValue = this._adminstrateur.Entity;
				if (((previousValue != value) 
							|| (this._adminstrateur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._adminstrateur.Entity = null;
						previousValue.LigneCommandAdmins.Remove(this);
					}
					this._adminstrateur.Entity = value;
					if ((value != null))
					{
						value.LigneCommandAdmins.Add(this);
						this._idadmin = value.idadmin;
					}
					else
					{
						this._idadmin = default(int);
					}
					this.SendPropertyChanged("adminstrateur");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commande_LigneCommandAdmin", Storage="_Commande", ThisKey="idCommande", OtherKey="idCommande", IsForeignKey=true)]
		public Commande Commande
		{
			get
			{
				return this._Commande.Entity;
			}
			set
			{
				Commande previousValue = this._Commande.Entity;
				if (((previousValue != value) 
							|| (this._Commande.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Commande.Entity = null;
						previousValue.LigneCommandAdmins.Remove(this);
					}
					this._Commande.Entity = value;
					if ((value != null))
					{
						value.LigneCommandAdmins.Add(this);
						this._idCommande = value.idCommande;
					}
					else
					{
						this._idCommande = default(int);
					}
					this.SendPropertyChanged("Commande");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Livreur")]
	public partial class Livreur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idLivreur;
		
		private string _NomComplet;
		
		private string _CIN;
		
		private string _AdresseLivreur;
		
		private string _telephoneLivreur;
		
		private string _photoLivreur;
		
		private System.Nullable<System.DateTime> _dateNaissance;
		
		private System.Nullable<System.DateTime> _dateRecretement;
		
		private System.Nullable<int> _idVille;
		
		private System.Nullable<int> _idlogpass;
		
		private EntitySet<Depot> _Depots;
		
		private EntitySet<Transport> _Transports;
		
		private EntityRef<logpass> _logpass;
		
		private EntityRef<Ville> _Ville;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidLivreurChanging(int value);
    partial void OnidLivreurChanged();
    partial void OnNomCompletChanging(string value);
    partial void OnNomCompletChanged();
    partial void OnCINChanging(string value);
    partial void OnCINChanged();
    partial void OnAdresseLivreurChanging(string value);
    partial void OnAdresseLivreurChanged();
    partial void OntelephoneLivreurChanging(string value);
    partial void OntelephoneLivreurChanged();
    partial void OnphotoLivreurChanging(string value);
    partial void OnphotoLivreurChanged();
    partial void OndateNaissanceChanging(System.Nullable<System.DateTime> value);
    partial void OndateNaissanceChanged();
    partial void OndateRecretementChanging(System.Nullable<System.DateTime> value);
    partial void OndateRecretementChanged();
    partial void OnidVilleChanging(System.Nullable<int> value);
    partial void OnidVilleChanged();
    partial void OnidlogpassChanging(System.Nullable<int> value);
    partial void OnidlogpassChanged();
    #endregion
		
		public Livreur()
		{
			this._Depots = new EntitySet<Depot>(new Action<Depot>(this.attach_Depots), new Action<Depot>(this.detach_Depots));
			this._Transports = new EntitySet<Transport>(new Action<Transport>(this.attach_Transports), new Action<Transport>(this.detach_Transports));
			this._logpass = default(EntityRef<logpass>);
			this._Ville = default(EntityRef<Ville>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLivreur", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idLivreur
		{
			get
			{
				return this._idLivreur;
			}
			set
			{
				if ((this._idLivreur != value))
				{
					this.OnidLivreurChanging(value);
					this.SendPropertyChanging();
					this._idLivreur = value;
					this.SendPropertyChanged("idLivreur");
					this.OnidLivreurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomComplet", DbType="VarChar(50)")]
		public string NomComplet
		{
			get
			{
				return this._NomComplet;
			}
			set
			{
				if ((this._NomComplet != value))
				{
					this.OnNomCompletChanging(value);
					this.SendPropertyChanging();
					this._NomComplet = value;
					this.SendPropertyChanged("NomComplet");
					this.OnNomCompletChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIN", DbType="VarChar(10)")]
		public string CIN
		{
			get
			{
				return this._CIN;
			}
			set
			{
				if ((this._CIN != value))
				{
					this.OnCINChanging(value);
					this.SendPropertyChanging();
					this._CIN = value;
					this.SendPropertyChanged("CIN");
					this.OnCINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdresseLivreur", DbType="VarChar(50)")]
		public string AdresseLivreur
		{
			get
			{
				return this._AdresseLivreur;
			}
			set
			{
				if ((this._AdresseLivreur != value))
				{
					this.OnAdresseLivreurChanging(value);
					this.SendPropertyChanging();
					this._AdresseLivreur = value;
					this.SendPropertyChanged("AdresseLivreur");
					this.OnAdresseLivreurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephoneLivreur", DbType="VarChar(50)")]
		public string telephoneLivreur
		{
			get
			{
				return this._telephoneLivreur;
			}
			set
			{
				if ((this._telephoneLivreur != value))
				{
					this.OntelephoneLivreurChanging(value);
					this.SendPropertyChanging();
					this._telephoneLivreur = value;
					this.SendPropertyChanged("telephoneLivreur");
					this.OntelephoneLivreurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photoLivreur", DbType="VarChar(50)")]
		public string photoLivreur
		{
			get
			{
				return this._photoLivreur;
			}
			set
			{
				if ((this._photoLivreur != value))
				{
					this.OnphotoLivreurChanging(value);
					this.SendPropertyChanging();
					this._photoLivreur = value;
					this.SendPropertyChanged("photoLivreur");
					this.OnphotoLivreurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateNaissance", DbType="Date")]
		public System.Nullable<System.DateTime> dateNaissance
		{
			get
			{
				return this._dateNaissance;
			}
			set
			{
				if ((this._dateNaissance != value))
				{
					this.OndateNaissanceChanging(value);
					this.SendPropertyChanging();
					this._dateNaissance = value;
					this.SendPropertyChanged("dateNaissance");
					this.OndateNaissanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateRecretement", DbType="Date")]
		public System.Nullable<System.DateTime> dateRecretement
		{
			get
			{
				return this._dateRecretement;
			}
			set
			{
				if ((this._dateRecretement != value))
				{
					this.OndateRecretementChanging(value);
					this.SendPropertyChanging();
					this._dateRecretement = value;
					this.SendPropertyChanged("dateRecretement");
					this.OndateRecretementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idVille", DbType="Int")]
		public System.Nullable<int> idVille
		{
			get
			{
				return this._idVille;
			}
			set
			{
				if ((this._idVille != value))
				{
					if (this._Ville.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidVilleChanging(value);
					this.SendPropertyChanging();
					this._idVille = value;
					this.SendPropertyChanged("idVille");
					this.OnidVilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idlogpass", DbType="Int")]
		public System.Nullable<int> idlogpass
		{
			get
			{
				return this._idlogpass;
			}
			set
			{
				if ((this._idlogpass != value))
				{
					if (this._logpass.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidlogpassChanging(value);
					this.SendPropertyChanging();
					this._idlogpass = value;
					this.SendPropertyChanged("idlogpass");
					this.OnidlogpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Livreur_Depot", Storage="_Depots", ThisKey="idLivreur", OtherKey="idLivreur")]
		public EntitySet<Depot> Depots
		{
			get
			{
				return this._Depots;
			}
			set
			{
				this._Depots.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Livreur_Transport", Storage="_Transports", ThisKey="idLivreur", OtherKey="idLivreur")]
		public EntitySet<Transport> Transports
		{
			get
			{
				return this._Transports;
			}
			set
			{
				this._Transports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="logpass_Livreur", Storage="_logpass", ThisKey="idlogpass", OtherKey="idlogpass", IsForeignKey=true)]
		public logpass logpass
		{
			get
			{
				return this._logpass.Entity;
			}
			set
			{
				logpass previousValue = this._logpass.Entity;
				if (((previousValue != value) 
							|| (this._logpass.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._logpass.Entity = null;
						previousValue.Livreurs.Remove(this);
					}
					this._logpass.Entity = value;
					if ((value != null))
					{
						value.Livreurs.Add(this);
						this._idlogpass = value.idlogpass;
					}
					else
					{
						this._idlogpass = default(Nullable<int>);
					}
					this.SendPropertyChanged("logpass");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ville_Livreur", Storage="_Ville", ThisKey="idVille", OtherKey="idVille", IsForeignKey=true)]
		public Ville Ville
		{
			get
			{
				return this._Ville.Entity;
			}
			set
			{
				Ville previousValue = this._Ville.Entity;
				if (((previousValue != value) 
							|| (this._Ville.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ville.Entity = null;
						previousValue.Livreurs.Remove(this);
					}
					this._Ville.Entity = value;
					if ((value != null))
					{
						value.Livreurs.Add(this);
						this._idVille = value.idVille;
					}
					else
					{
						this._idVille = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ville");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Depots(Depot entity)
		{
			this.SendPropertyChanging();
			entity.Livreur = this;
		}
		
		private void detach_Depots(Depot entity)
		{
			this.SendPropertyChanging();
			entity.Livreur = null;
		}
		
		private void attach_Transports(Transport entity)
		{
			this.SendPropertyChanging();
			entity.Livreur = this;
		}
		
		private void detach_Transports(Transport entity)
		{
			this.SendPropertyChanging();
			entity.Livreur = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LigneCommandAdmin")]
	public partial class LigneCommandAdmin1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idadmin;
		
		private int _idCommande;
		
		private EntityRef<adminstrateur> _adminstrateur;
		
		private EntityRef<Commande> _Commande;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidadminChanging(int value);
    partial void OnidadminChanged();
    partial void OnidCommandeChanging(int value);
    partial void OnidCommandeChanged();
    #endregion
		
		public LigneCommandAdmin1()
		{
			this._adminstrateur = default(EntityRef<adminstrateur>);
			this._Commande = default(EntityRef<Commande>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idadmin", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idadmin
		{
			get
			{
				return this._idadmin;
			}
			set
			{
				if ((this._idadmin != value))
				{
					if (this._adminstrateur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidadminChanging(value);
					this.SendPropertyChanging();
					this._idadmin = value;
					this.SendPropertyChanged("idadmin");
					this.OnidadminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCommande", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idCommande
		{
			get
			{
				return this._idCommande;
			}
			set
			{
				if ((this._idCommande != value))
				{
					if (this._Commande.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCommandeChanging(value);
					this.SendPropertyChanging();
					this._idCommande = value;
					this.SendPropertyChanged("idCommande");
					this.OnidCommandeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="adminstrateur_LigneCommandAdmin1", Storage="_adminstrateur", ThisKey="idadmin", OtherKey="idadmin", IsForeignKey=true)]
		public adminstrateur adminstrateur
		{
			get
			{
				return this._adminstrateur.Entity;
			}
			set
			{
				adminstrateur previousValue = this._adminstrateur.Entity;
				if (((previousValue != value) 
							|| (this._adminstrateur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._adminstrateur.Entity = null;
						previousValue.LigneCommandAdmin1s.Remove(this);
					}
					this._adminstrateur.Entity = value;
					if ((value != null))
					{
						value.LigneCommandAdmin1s.Add(this);
						this._idadmin = value.idadmin;
					}
					else
					{
						this._idadmin = default(int);
					}
					this.SendPropertyChanged("adminstrateur");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commande_LigneCommandAdmin1", Storage="_Commande", ThisKey="idCommande", OtherKey="idCommande", IsForeignKey=true)]
		public Commande Commande
		{
			get
			{
				return this._Commande.Entity;
			}
			set
			{
				Commande previousValue = this._Commande.Entity;
				if (((previousValue != value) 
							|| (this._Commande.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Commande.Entity = null;
						previousValue.LigneCommandAdmin1s.Remove(this);
					}
					this._Commande.Entity = value;
					if ((value != null))
					{
						value.LigneCommandAdmin1s.Add(this);
						this._idCommande = value.idCommande;
					}
					else
					{
						this._idCommande = default(int);
					}
					this.SendPropertyChanged("Commande");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.logpass")]
	public partial class logpass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idlogpass;
		
		private string _logword;
		
		private string _pasword;
		
		private EntitySet<Employe> _Employes;
		
		private EntitySet<Livreur> _Livreurs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidlogpassChanging(int value);
    partial void OnidlogpassChanged();
    partial void OnlogwordChanging(string value);
    partial void OnlogwordChanged();
    partial void OnpaswordChanging(string value);
    partial void OnpaswordChanged();
    #endregion
		
		public logpass()
		{
			this._Employes = new EntitySet<Employe>(new Action<Employe>(this.attach_Employes), new Action<Employe>(this.detach_Employes));
			this._Livreurs = new EntitySet<Livreur>(new Action<Livreur>(this.attach_Livreurs), new Action<Livreur>(this.detach_Livreurs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idlogpass", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idlogpass
		{
			get
			{
				return this._idlogpass;
			}
			set
			{
				if ((this._idlogpass != value))
				{
					this.OnidlogpassChanging(value);
					this.SendPropertyChanging();
					this._idlogpass = value;
					this.SendPropertyChanged("idlogpass");
					this.OnidlogpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logword", DbType="VarChar(50)")]
		public string logword
		{
			get
			{
				return this._logword;
			}
			set
			{
				if ((this._logword != value))
				{
					this.OnlogwordChanging(value);
					this.SendPropertyChanging();
					this._logword = value;
					this.SendPropertyChanged("logword");
					this.OnlogwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pasword", DbType="VarChar(50)")]
		public string pasword
		{
			get
			{
				return this._pasword;
			}
			set
			{
				if ((this._pasword != value))
				{
					this.OnpaswordChanging(value);
					this.SendPropertyChanging();
					this._pasword = value;
					this.SendPropertyChanged("pasword");
					this.OnpaswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="logpass_Employe", Storage="_Employes", ThisKey="idlogpass", OtherKey="idlogpass")]
		public EntitySet<Employe> Employes
		{
			get
			{
				return this._Employes;
			}
			set
			{
				this._Employes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="logpass_Livreur", Storage="_Livreurs", ThisKey="idlogpass", OtherKey="idlogpass")]
		public EntitySet<Livreur> Livreurs
		{
			get
			{
				return this._Livreurs;
			}
			set
			{
				this._Livreurs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employes(Employe entity)
		{
			this.SendPropertyChanging();
			entity.logpass = this;
		}
		
		private void detach_Employes(Employe entity)
		{
			this.SendPropertyChanging();
			entity.logpass = null;
		}
		
		private void attach_Livreurs(Livreur entity)
		{
			this.SendPropertyChanging();
			entity.logpass = this;
		}
		
		private void detach_Livreurs(Livreur entity)
		{
			this.SendPropertyChanging();
			entity.logpass = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.logpassadmin")]
	public partial class logpassadmin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idlogpassAdmin;
		
		private string _logwordAdmin;
		
		private string _paswordAdmin;
		
		private EntitySet<adminstrateur> _adminstrateurs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidlogpassAdminChanging(int value);
    partial void OnidlogpassAdminChanged();
    partial void OnlogwordAdminChanging(string value);
    partial void OnlogwordAdminChanged();
    partial void OnpaswordAdminChanging(string value);
    partial void OnpaswordAdminChanged();
    #endregion
		
		public logpassadmin()
		{
			this._adminstrateurs = new EntitySet<adminstrateur>(new Action<adminstrateur>(this.attach_adminstrateurs), new Action<adminstrateur>(this.detach_adminstrateurs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idlogpassAdmin", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idlogpassAdmin
		{
			get
			{
				return this._idlogpassAdmin;
			}
			set
			{
				if ((this._idlogpassAdmin != value))
				{
					this.OnidlogpassAdminChanging(value);
					this.SendPropertyChanging();
					this._idlogpassAdmin = value;
					this.SendPropertyChanged("idlogpassAdmin");
					this.OnidlogpassAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logwordAdmin", DbType="VarChar(50)")]
		public string logwordAdmin
		{
			get
			{
				return this._logwordAdmin;
			}
			set
			{
				if ((this._logwordAdmin != value))
				{
					this.OnlogwordAdminChanging(value);
					this.SendPropertyChanging();
					this._logwordAdmin = value;
					this.SendPropertyChanged("logwordAdmin");
					this.OnlogwordAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paswordAdmin", DbType="VarChar(50)")]
		public string paswordAdmin
		{
			get
			{
				return this._paswordAdmin;
			}
			set
			{
				if ((this._paswordAdmin != value))
				{
					this.OnpaswordAdminChanging(value);
					this.SendPropertyChanging();
					this._paswordAdmin = value;
					this.SendPropertyChanged("paswordAdmin");
					this.OnpaswordAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="logpassadmin_adminstrateur", Storage="_adminstrateurs", ThisKey="idlogpassAdmin", OtherKey="idlogpassAdmin")]
		public EntitySet<adminstrateur> adminstrateurs
		{
			get
			{
				return this._adminstrateurs;
			}
			set
			{
				this._adminstrateurs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_adminstrateurs(adminstrateur entity)
		{
			this.SendPropertyChanging();
			entity.logpassadmin = this;
		}
		
		private void detach_adminstrateurs(adminstrateur entity)
		{
			this.SendPropertyChanging();
			entity.logpassadmin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Produit")]
	public partial class Produit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idProduit;
		
		private string _Designation;
		
		private string _imageProduit;
		
		private System.Nullable<double> _prixReel;
		
		private string _ProduitStatue;
		
		private System.Nullable<int> _Quantite;
		
		private EntitySet<Commande> _Commandes;
		
		private EntitySet<Depot> _Depots;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidProduitChanging(int value);
    partial void OnidProduitChanged();
    partial void OnDesignationChanging(string value);
    partial void OnDesignationChanged();
    partial void OnimageProduitChanging(string value);
    partial void OnimageProduitChanged();
    partial void OnprixReelChanging(System.Nullable<double> value);
    partial void OnprixReelChanged();
    partial void OnProduitStatueChanging(string value);
    partial void OnProduitStatueChanged();
    partial void OnQuantiteChanging(System.Nullable<int> value);
    partial void OnQuantiteChanged();
    #endregion
		
		public Produit()
		{
			this._Commandes = new EntitySet<Commande>(new Action<Commande>(this.attach_Commandes), new Action<Commande>(this.detach_Commandes));
			this._Depots = new EntitySet<Depot>(new Action<Depot>(this.attach_Depots), new Action<Depot>(this.detach_Depots));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProduit", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idProduit
		{
			get
			{
				return this._idProduit;
			}
			set
			{
				if ((this._idProduit != value))
				{
					this.OnidProduitChanging(value);
					this.SendPropertyChanging();
					this._idProduit = value;
					this.SendPropertyChanged("idProduit");
					this.OnidProduitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="VarChar(50)")]
		public string Designation
		{
			get
			{
				return this._Designation;
			}
			set
			{
				if ((this._Designation != value))
				{
					this.OnDesignationChanging(value);
					this.SendPropertyChanging();
					this._Designation = value;
					this.SendPropertyChanged("Designation");
					this.OnDesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imageProduit", DbType="VarChar(50)")]
		public string imageProduit
		{
			get
			{
				return this._imageProduit;
			}
			set
			{
				if ((this._imageProduit != value))
				{
					this.OnimageProduitChanging(value);
					this.SendPropertyChanging();
					this._imageProduit = value;
					this.SendPropertyChanged("imageProduit");
					this.OnimageProduitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prixReel", DbType="Float")]
		public System.Nullable<double> prixReel
		{
			get
			{
				return this._prixReel;
			}
			set
			{
				if ((this._prixReel != value))
				{
					this.OnprixReelChanging(value);
					this.SendPropertyChanging();
					this._prixReel = value;
					this.SendPropertyChanged("prixReel");
					this.OnprixReelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProduitStatue", DbType="VarChar(50)")]
		public string ProduitStatue
		{
			get
			{
				return this._ProduitStatue;
			}
			set
			{
				if ((this._ProduitStatue != value))
				{
					this.OnProduitStatueChanging(value);
					this.SendPropertyChanging();
					this._ProduitStatue = value;
					this.SendPropertyChanged("ProduitStatue");
					this.OnProduitStatueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantite", DbType="Int")]
		public System.Nullable<int> Quantite
		{
			get
			{
				return this._Quantite;
			}
			set
			{
				if ((this._Quantite != value))
				{
					this.OnQuantiteChanging(value);
					this.SendPropertyChanging();
					this._Quantite = value;
					this.SendPropertyChanged("Quantite");
					this.OnQuantiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produit_Commande", Storage="_Commandes", ThisKey="idProduit", OtherKey="idProduit")]
		public EntitySet<Commande> Commandes
		{
			get
			{
				return this._Commandes;
			}
			set
			{
				this._Commandes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produit_Depot", Storage="_Depots", ThisKey="idProduit", OtherKey="idProduit")]
		public EntitySet<Depot> Depots
		{
			get
			{
				return this._Depots;
			}
			set
			{
				this._Depots.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Commandes(Commande entity)
		{
			this.SendPropertyChanging();
			entity.Produit = this;
		}
		
		private void detach_Commandes(Commande entity)
		{
			this.SendPropertyChanging();
			entity.Produit = null;
		}
		
		private void attach_Depots(Depot entity)
		{
			this.SendPropertyChanging();
			entity.Produit = this;
		}
		
		private void detach_Depots(Depot entity)
		{
			this.SendPropertyChanging();
			entity.Produit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SocietéLivraison")]
	public partial class SocietéLivraison : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idSocietéLivraison;
		
		private string _NomSocieté;
		
		private System.Nullable<decimal> _Tarif;
		
		private EntitySet<Transport> _Transports;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidSocietéLivraisonChanging(int value);
    partial void OnidSocietéLivraisonChanged();
    partial void OnNomSocietéChanging(string value);
    partial void OnNomSocietéChanged();
    partial void OnTarifChanging(System.Nullable<decimal> value);
    partial void OnTarifChanged();
    #endregion
		
		public SocietéLivraison()
		{
			this._Transports = new EntitySet<Transport>(new Action<Transport>(this.attach_Transports), new Action<Transport>(this.detach_Transports));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSocietéLivraison", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idSocietéLivraison
		{
			get
			{
				return this._idSocietéLivraison;
			}
			set
			{
				if ((this._idSocietéLivraison != value))
				{
					this.OnidSocietéLivraisonChanging(value);
					this.SendPropertyChanging();
					this._idSocietéLivraison = value;
					this.SendPropertyChanged("idSocietéLivraison");
					this.OnidSocietéLivraisonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomSocieté", DbType="VarChar(50)")]
		public string NomSocieté
		{
			get
			{
				return this._NomSocieté;
			}
			set
			{
				if ((this._NomSocieté != value))
				{
					this.OnNomSocietéChanging(value);
					this.SendPropertyChanging();
					this._NomSocieté = value;
					this.SendPropertyChanged("NomSocieté");
					this.OnNomSocietéChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tarif", DbType="Money")]
		public System.Nullable<decimal> Tarif
		{
			get
			{
				return this._Tarif;
			}
			set
			{
				if ((this._Tarif != value))
				{
					this.OnTarifChanging(value);
					this.SendPropertyChanging();
					this._Tarif = value;
					this.SendPropertyChanged("Tarif");
					this.OnTarifChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SocietéLivraison_Transport", Storage="_Transports", ThisKey="idSocietéLivraison", OtherKey="idSocietéLivraison")]
		public EntitySet<Transport> Transports
		{
			get
			{
				return this._Transports;
			}
			set
			{
				this._Transports.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transports(Transport entity)
		{
			this.SendPropertyChanging();
			entity.SocietéLivraison = this;
		}
		
		private void detach_Transports(Transport entity)
		{
			this.SendPropertyChanging();
			entity.SocietéLivraison = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transport")]
	public partial class Transport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTransport;
		
		private System.Nullable<int> _idSocietéLivraison;
		
		private System.Nullable<int> _idLivreur;
		
		private EntitySet<Commande> _Commandes;
		
		private EntityRef<SocietéLivraison> _SocietéLivraison;
		
		private EntityRef<Livreur> _Livreur;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTransportChanging(int value);
    partial void OnidTransportChanged();
    partial void OnidSocietéLivraisonChanging(System.Nullable<int> value);
    partial void OnidSocietéLivraisonChanged();
    partial void OnidLivreurChanging(System.Nullable<int> value);
    partial void OnidLivreurChanged();
    #endregion
		
		public Transport()
		{
			this._Commandes = new EntitySet<Commande>(new Action<Commande>(this.attach_Commandes), new Action<Commande>(this.detach_Commandes));
			this._SocietéLivraison = default(EntityRef<SocietéLivraison>);
			this._Livreur = default(EntityRef<Livreur>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTransport", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTransport
		{
			get
			{
				return this._idTransport;
			}
			set
			{
				if ((this._idTransport != value))
				{
					this.OnidTransportChanging(value);
					this.SendPropertyChanging();
					this._idTransport = value;
					this.SendPropertyChanged("idTransport");
					this.OnidTransportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSocietéLivraison", DbType="Int")]
		public System.Nullable<int> idSocietéLivraison
		{
			get
			{
				return this._idSocietéLivraison;
			}
			set
			{
				if ((this._idSocietéLivraison != value))
				{
					if (this._SocietéLivraison.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidSocietéLivraisonChanging(value);
					this.SendPropertyChanging();
					this._idSocietéLivraison = value;
					this.SendPropertyChanged("idSocietéLivraison");
					this.OnidSocietéLivraisonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLivreur", DbType="Int")]
		public System.Nullable<int> idLivreur
		{
			get
			{
				return this._idLivreur;
			}
			set
			{
				if ((this._idLivreur != value))
				{
					if (this._Livreur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidLivreurChanging(value);
					this.SendPropertyChanging();
					this._idLivreur = value;
					this.SendPropertyChanged("idLivreur");
					this.OnidLivreurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transport_Commande", Storage="_Commandes", ThisKey="idTransport", OtherKey="idTransport")]
		public EntitySet<Commande> Commandes
		{
			get
			{
				return this._Commandes;
			}
			set
			{
				this._Commandes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SocietéLivraison_Transport", Storage="_SocietéLivraison", ThisKey="idSocietéLivraison", OtherKey="idSocietéLivraison", IsForeignKey=true)]
		public SocietéLivraison SocietéLivraison
		{
			get
			{
				return this._SocietéLivraison.Entity;
			}
			set
			{
				SocietéLivraison previousValue = this._SocietéLivraison.Entity;
				if (((previousValue != value) 
							|| (this._SocietéLivraison.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SocietéLivraison.Entity = null;
						previousValue.Transports.Remove(this);
					}
					this._SocietéLivraison.Entity = value;
					if ((value != null))
					{
						value.Transports.Add(this);
						this._idSocietéLivraison = value.idSocietéLivraison;
					}
					else
					{
						this._idSocietéLivraison = default(Nullable<int>);
					}
					this.SendPropertyChanged("SocietéLivraison");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Livreur_Transport", Storage="_Livreur", ThisKey="idLivreur", OtherKey="idLivreur", IsForeignKey=true)]
		public Livreur Livreur
		{
			get
			{
				return this._Livreur.Entity;
			}
			set
			{
				Livreur previousValue = this._Livreur.Entity;
				if (((previousValue != value) 
							|| (this._Livreur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Livreur.Entity = null;
						previousValue.Transports.Remove(this);
					}
					this._Livreur.Entity = value;
					if ((value != null))
					{
						value.Transports.Add(this);
						this._idLivreur = value.idLivreur;
					}
					else
					{
						this._idLivreur = default(Nullable<int>);
					}
					this.SendPropertyChanged("Livreur");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Commandes(Commande entity)
		{
			this.SendPropertyChanging();
			entity.Transport = this;
		}
		
		private void detach_Commandes(Commande entity)
		{
			this.SendPropertyChanging();
			entity.Transport = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ville")]
	public partial class Ville : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idVille;
		
		private string _NomVille;
		
		private EntitySet<Client> _Clients;
		
		private EntitySet<Commande> _Commandes;
		
		private EntitySet<Livreur> _Livreurs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidVilleChanging(int value);
    partial void OnidVilleChanged();
    partial void OnNomVilleChanging(string value);
    partial void OnNomVilleChanged();
    #endregion
		
		public Ville()
		{
			this._Clients = new EntitySet<Client>(new Action<Client>(this.attach_Clients), new Action<Client>(this.detach_Clients));
			this._Commandes = new EntitySet<Commande>(new Action<Commande>(this.attach_Commandes), new Action<Commande>(this.detach_Commandes));
			this._Livreurs = new EntitySet<Livreur>(new Action<Livreur>(this.attach_Livreurs), new Action<Livreur>(this.detach_Livreurs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idVille", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idVille
		{
			get
			{
				return this._idVille;
			}
			set
			{
				if ((this._idVille != value))
				{
					this.OnidVilleChanging(value);
					this.SendPropertyChanging();
					this._idVille = value;
					this.SendPropertyChanged("idVille");
					this.OnidVilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomVille", DbType="VarChar(50)")]
		public string NomVille
		{
			get
			{
				return this._NomVille;
			}
			set
			{
				if ((this._NomVille != value))
				{
					this.OnNomVilleChanging(value);
					this.SendPropertyChanging();
					this._NomVille = value;
					this.SendPropertyChanged("NomVille");
					this.OnNomVilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ville_Client", Storage="_Clients", ThisKey="idVille", OtherKey="idville")]
		public EntitySet<Client> Clients
		{
			get
			{
				return this._Clients;
			}
			set
			{
				this._Clients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ville_Commande", Storage="_Commandes", ThisKey="idVille", OtherKey="idVille")]
		public EntitySet<Commande> Commandes
		{
			get
			{
				return this._Commandes;
			}
			set
			{
				this._Commandes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ville_Livreur", Storage="_Livreurs", ThisKey="idVille", OtherKey="idVille")]
		public EntitySet<Livreur> Livreurs
		{
			get
			{
				return this._Livreurs;
			}
			set
			{
				this._Livreurs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clients(Client entity)
		{
			this.SendPropertyChanging();
			entity.Ville = this;
		}
		
		private void detach_Clients(Client entity)
		{
			this.SendPropertyChanging();
			entity.Ville = null;
		}
		
		private void attach_Commandes(Commande entity)
		{
			this.SendPropertyChanging();
			entity.Ville = this;
		}
		
		private void detach_Commandes(Commande entity)
		{
			this.SendPropertyChanging();
			entity.Ville = null;
		}
		
		private void attach_Livreurs(Livreur entity)
		{
			this.SendPropertyChanging();
			entity.Ville = this;
		}
		
		private void detach_Livreurs(Livreur entity)
		{
			this.SendPropertyChanging();
			entity.Ville = null;
		}
	}
}
#pragma warning restore 1591
